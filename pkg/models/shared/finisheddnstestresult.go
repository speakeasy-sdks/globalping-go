// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"github.com/speakeasy-sdks/globalping-go/pkg/utils"
)

type FinishedDNSTestResultType string

const (
	FinishedDNSTestResultTypeFinishedSimpleDNSTestResult FinishedDNSTestResultType = "FinishedSimpleDnsTestResult"
	FinishedDNSTestResultTypeFinishedTraceDNSTestResult  FinishedDNSTestResultType = "FinishedTraceDnsTestResult"
)

type FinishedDNSTestResult struct {
	FinishedSimpleDNSTestResult *FinishedSimpleDNSTestResult
	FinishedTraceDNSTestResult  *FinishedTraceDNSTestResult

	Type FinishedDNSTestResultType
}

func CreateFinishedDNSTestResultFinishedSimpleDNSTestResult(finishedSimpleDNSTestResult FinishedSimpleDNSTestResult) FinishedDNSTestResult {
	typ := FinishedDNSTestResultTypeFinishedSimpleDNSTestResult

	return FinishedDNSTestResult{
		FinishedSimpleDNSTestResult: &finishedSimpleDNSTestResult,
		Type:                        typ,
	}
}

func CreateFinishedDNSTestResultFinishedTraceDNSTestResult(finishedTraceDNSTestResult FinishedTraceDNSTestResult) FinishedDNSTestResult {
	typ := FinishedDNSTestResultTypeFinishedTraceDNSTestResult

	return FinishedDNSTestResult{
		FinishedTraceDNSTestResult: &finishedTraceDNSTestResult,
		Type:                       typ,
	}
}

func (u *FinishedDNSTestResult) UnmarshalJSON(data []byte) error {

	finishedTraceDNSTestResult := new(FinishedTraceDNSTestResult)
	if err := utils.UnmarshalJSON(data, &finishedTraceDNSTestResult, "", true, true); err == nil {
		u.FinishedTraceDNSTestResult = finishedTraceDNSTestResult
		u.Type = FinishedDNSTestResultTypeFinishedTraceDNSTestResult
		return nil
	}

	finishedSimpleDNSTestResult := new(FinishedSimpleDNSTestResult)
	if err := utils.UnmarshalJSON(data, &finishedSimpleDNSTestResult, "", true, true); err == nil {
		u.FinishedSimpleDNSTestResult = finishedSimpleDNSTestResult
		u.Type = FinishedDNSTestResultTypeFinishedSimpleDNSTestResult
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u FinishedDNSTestResult) MarshalJSON() ([]byte, error) {
	if u.FinishedSimpleDNSTestResult != nil {
		return utils.MarshalJSON(u.FinishedSimpleDNSTestResult, "", true)
	}

	if u.FinishedTraceDNSTestResult != nil {
		return utils.MarshalJSON(u.FinishedTraceDNSTestResult, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
