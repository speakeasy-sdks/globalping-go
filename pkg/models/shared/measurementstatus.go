// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MeasurementStatus - The measurement status. Any value other than `in-progress` is final.
type MeasurementStatus string

const (
	MeasurementStatusInProgress MeasurementStatus = "in-progress"
	MeasurementStatusFinished   MeasurementStatus = "finished"
)

func (e MeasurementStatus) ToPointer() *MeasurementStatus {
	return &e
}

func (e *MeasurementStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in-progress":
		fallthrough
	case "finished":
		*e = MeasurementStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeasurementStatus: %v", v)
	}
}
