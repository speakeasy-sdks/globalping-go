// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/globalping-go/pkg/types"
	"github.com/speakeasy-sdks/globalping-go/pkg/utils"
)

type FinishedSimpleDNSTestResultTimings struct {
	// The total query time in milliseconds.
	Total float64 `json:"total"`
}

func (o *FinishedSimpleDNSTestResultTimings) GetTotal() float64 {
	if o == nil {
		return 0.0
	}
	return o.Total
}

type FinishedSimpleDNSTestResult struct {
	// The list of received resource records.
	Answers []DNSTestAnswer `json:"answers"`
	// The raw output can be presented to users but is not meant to be parsed clients.
	// Please use the individual values provided in other fields for automated processing.
	//
	RawOutput string `json:"rawOutput"`
	// The hostname or IP of the resolver that answered the query.
	Resolver string `json:"resolver"`
	status   string `const:"finished" json:"status"`
	// The DNS [response code](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
	StatusCode int64 `json:"statusCode"`
	// The DNS [response code name](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
	StatusCodeName string                             `json:"statusCodeName"`
	Timings        FinishedSimpleDNSTestResultTimings `json:"timings"`
}

func (f FinishedSimpleDNSTestResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FinishedSimpleDNSTestResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *FinishedSimpleDNSTestResult) GetAnswers() []DNSTestAnswer {
	if o == nil {
		return []DNSTestAnswer{}
	}
	return o.Answers
}

func (o *FinishedSimpleDNSTestResult) GetRawOutput() string {
	if o == nil {
		return ""
	}
	return o.RawOutput
}

func (o *FinishedSimpleDNSTestResult) GetResolver() string {
	if o == nil {
		return ""
	}
	return o.Resolver
}

func (o *FinishedSimpleDNSTestResult) GetStatus() string {
	return "finished"
}

func (o *FinishedSimpleDNSTestResult) GetStatusCode() int64 {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FinishedSimpleDNSTestResult) GetStatusCodeName() string {
	if o == nil {
		return ""
	}
	return o.StatusCodeName
}

func (o *FinishedSimpleDNSTestResult) GetTimings() FinishedSimpleDNSTestResultTimings {
	if o == nil {
		return FinishedSimpleDNSTestResultTimings{}
	}
	return o.Timings
}
