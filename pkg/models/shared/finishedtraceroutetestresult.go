// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/globalping-go/pkg/types"
	"github.com/speakeasy-sdks/globalping-go/pkg/utils"
)

type FinishedTracerouteTestResultTimings struct {
	// The round-trip time for this packet.
	Rtt float64 `json:"rtt"`
}

func (o *FinishedTracerouteTestResultTimings) GetRtt() float64 {
	if o == nil {
		return 0.0
	}
	return o.Rtt
}

type FinishedTracerouteTestResultHops struct {
	// The resolved IP address of the `target`.
	ResolvedAddress string `json:"resolvedAddress"`
	// The resolved hostname of the `target`.
	ResolvedHostname *string `json:"resolvedHostname"`
	// Details for each sent packet.
	// All times are in milliseconds.
	//
	Timings []FinishedTracerouteTestResultTimings `json:"timings"`
}

func (o *FinishedTracerouteTestResultHops) GetResolvedAddress() string {
	if o == nil {
		return ""
	}
	return o.ResolvedAddress
}

func (o *FinishedTracerouteTestResultHops) GetResolvedHostname() *string {
	if o == nil {
		return nil
	}
	return o.ResolvedHostname
}

func (o *FinishedTracerouteTestResultHops) GetTimings() []FinishedTracerouteTestResultTimings {
	if o == nil {
		return []FinishedTracerouteTestResultTimings{}
	}
	return o.Timings
}

type FinishedTracerouteTestResult struct {
	// Details for each hop.
	Hops []FinishedTracerouteTestResultHops `json:"hops"`
	// The raw output can be presented to users but is not meant to be parsed clients.
	// Please use the individual values provided in other fields for automated processing.
	//
	RawOutput string `json:"rawOutput"`
	// The resolved IP address of the `target`.
	ResolvedAddress string `json:"resolvedAddress"`
	// The resolved hostname of the `target`.
	ResolvedHostname *string `json:"resolvedHostname"`
	status           string  `const:"finished" json:"status"`
}

func (f FinishedTracerouteTestResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FinishedTracerouteTestResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *FinishedTracerouteTestResult) GetHops() []FinishedTracerouteTestResultHops {
	if o == nil {
		return []FinishedTracerouteTestResultHops{}
	}
	return o.Hops
}

func (o *FinishedTracerouteTestResult) GetRawOutput() string {
	if o == nil {
		return ""
	}
	return o.RawOutput
}

func (o *FinishedTracerouteTestResult) GetResolvedAddress() string {
	if o == nil {
		return ""
	}
	return o.ResolvedAddress
}

func (o *FinishedTracerouteTestResult) GetResolvedHostname() *string {
	if o == nil {
		return nil
	}
	return o.ResolvedHostname
}

func (o *FinishedTracerouteTestResult) GetStatus() string {
	return "finished"
}
